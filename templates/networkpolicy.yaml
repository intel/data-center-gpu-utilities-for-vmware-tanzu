{{- if .Values.networkpolicy.enabled }}
# prevent access to NFD and limit access from NFD
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nfd-deny-ingress
  namespace: node-feature-discovery
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  egress:
    - to:
      - ipBlock:
           cidr: 0.0.0.0/0
      ports:
       - protocol: TCP
         port: 6443 # API server
    - to:
      - ipBlock:
          cidr: {{ required "Network policy requires apiserver IP" .Values.networkpolicy.apiserver }}
      ports:
        - protocol: TCP
          port: 443 # HTTPS
---
# limit cert-manager access to outside and block ingress in general
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: certmanager-deny-ingress-limit-egress
  namespace: cert-manager
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  egress:
    - to:
      - ipBlock:
           cidr: 0.0.0.0/0
      ports:
       - port: 6443 # API server
         protocol: TCP
       - port: 53 # DNS
         protocol: UDP
       - port: 443 # HTTPS
         protocol: TCP
       - port: 10250 # Webhook
         protocol: TCP
---
# Limit cert-manager access from outside to only webhook
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: certmanager-allow-webhook
  namespace: cert-manager
spec:
  podSelector:
    matchLabels:
      app: webhook
  policyTypes:
  - Ingress
  ingress:
    - ports:
        - protocol: TCP
          port: 10250 # Webhook
---
# prevent access to KMMO and limit access from KMMO
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kmmo-deny-ingress-egress
  namespace: kmm-operator-system
spec:
  podSelector: {}
  egress:
  - ports:

    - port: 53 # DNS
      protocol: UDP
    - port: 6443 # API server
      protocol: TCP
{{- range $.Values.networkpolicy.kmmo.extraPorts }}
    - port: {{ .port }}
      protocol: {{ .protocol }}
{{- end }}
    to:
    - ipBlock:
        cidr: 0.0.0.0/0
  policyTypes:
  - Ingress
  - Egress
{{- end }}
