# Content of this yaml is derived from here: https://github.com/kubernetes-sigs/kernel-module-management/tree/main/config/default
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    control-plane: controller
  name: kmm-operator-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-controller
  namespace: kmm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-leader-election-role
  namespace: kmm-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-event-recorder-clusterrole
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - cluster.open-cluster-management.io
  resources:
  - clusterclaims
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - cluster.open-cluster-management.io
  resourceNames:
  - kernel-versions.kmm.node.kubernetes.io
  resources:
  - clusterclaims
  verbs:
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - modules
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - modules/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - nodemodulesconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - nodemodulesconfigs/status
  verbs:
  - patch
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - preflightvalidations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kmm.sigs.x-k8s.io
  resources:
  - preflightvalidations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-leader-election-rolebinding
  namespace: kmm-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kmm-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: kmm-operator-controller
  namespace: kmm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-event-recorder-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kmm-operator-event-recorder-clusterrole
subjects:
- kind: ServiceAccount
  name: kmm-operator-controller
  namespace: kmm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kmm-operator-manager-role
subjects:
- kind: ServiceAccount
  name: kmm-operator-controller
  namespace: kmm-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kmm-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: kmm-operator-controller
  namespace: kmm-operator-system
---
apiVersion: v1
data:
  controller_config.yaml: |
    healthProbeBindAddress: :8081
    webhookPort: 9443
    leaderElection:
      enabled: true
      resourceID: kmm.sigs.x-k8s.io
    metrics:
      enableAuthnAuthz: true
      bindAddress: 0.0.0.0:8443
      secureServing: true
    worker:
      runAsUser: 0
      seLinuxType: spc_t
{{- if .Values.setFirmwareClassPath }}
      setFirmwareClassPath: /var/lib/firmware
{{- end }}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-manager-config
  namespace: kmm-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    control-plane: controller
  name: kmm-operator-controller-metrics-service
  namespace: kmm-operator-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    control-plane: controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/created-by: kernel-module-management
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-webhook-service
  namespace: kmm-operator-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    control-plane: controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
    control-plane: controller
  name: kmm-operator-controller
  namespace: kmm-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: kmm
      app.kubernetes.io/name: kmm
      app.kubernetes.io/part-of: kmm
      control-plane: controller
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app.kubernetes.io/component: kmm
        app.kubernetes.io/name: kmm
        app.kubernetes.io/part-of: kmm
        control-plane: controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists
            - matchExpressions:
              - key: kmm.node.kubernetes.io/control-plane
                operator: Exists
      containers:
      - args:
        - --config=controller_config.yaml
        env:
        - name: RELATED_IMAGE_WORKER
          value: gcr.io/k8s-staging-kmm/kernel-module-management-worker:v20240306-v2.0.2
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: RELATED_IMAGE_BUILD
          value: gcr.io/kaniko-project/executor:latest
        - name: RELATED_IMAGE_SIGN
          value: gcr.io/k8s-staging-kmm/kernel-module-management-signimage:v20240306-v2.0.2
        image: gcr.io/k8s-staging-kmm/kernel-module-management-operator:v20240306-v2.0.2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 384Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - "ALL"
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /controller_config.yaml
          name: manager-config
          subPath: controller_config.yaml
        - mountPath: /sys/devices/virtual/powercap
          name: powercapmask
      securityContext:
        runAsNonRoot: true
      serviceAccountName: kmm-operator-controller
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
      volumes:
      # https://github.com/advisories/GHSA-7ww5-4wqc-m92c
      # https://github.com/advisories/GHSA-jq35-85cj-fj4p
      - name: powercapmask
        emptyDir: {}
      - name: cert
        secret:
          defaultMode: 420
          secretName: kmm-operator-webhook-server-cert
      - configMap:
          name: kmm-operator-manager-config
        name: manager-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/created-by: kernel-module-management
    app.kubernetes.io/instance: serving-cert
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-serving-cert
  namespace: kmm-operator-system
spec:
  dnsNames:
  - kmm-operator-webhook-service.kmm-operator-system.svc
  - kmm-operator-webhook-service.kmm-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: kmm-operator-selfsigned-issuer
  secretName: kmm-operator-webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/created-by: kernel-module-management
    app.kubernetes.io/instance: selfsigned-issuer
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-selfsigned-issuer
  namespace: kmm-operator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kmm-operator-system/kmm-operator-serving-cert
  labels:
    app.kubernetes.io/component: kmm
    app.kubernetes.io/created-by: kernel-module-management
    app.kubernetes.io/instance: validating-webhook-configuration
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: kmm
    app.kubernetes.io/part-of: kmm
  name: kmm-operator-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kmm-operator-webhook-service
      namespace: kmm-operator-system
      path: /validate--v1-namespace
  failurePolicy: Fail
  name: namespace-deletion.kmm.sigs.k8s.io
  namespaceSelector:
    matchLabels:
      kmm.node.k8s.io/contains-modules: ""
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - DELETE
    resources:
    - namespaces
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: kmm-operator-webhook-service
      namespace: kmm-operator-system
      path: /validate-kmm-sigs-x-k8s-io-v1beta1-module
  failurePolicy: Fail
  name: vmodule.kb.io
  rules:
  - apiGroups:
    - kmm.sigs.x-k8s.io
    apiVersions:
    - v1beta1
    operations:
    - CREATE
    - UPDATE
    resources:
    - modules
  sideEffects: None
